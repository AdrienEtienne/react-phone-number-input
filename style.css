/* CSS variables. */
:root {
	--PhoneInputCountryFlag-width: calc(0.31em * 4);
	--PhoneInputCountryFlag-height: calc(var(--PhoneInputCountryFlag-width) * 3 / 4);
	--PhoneInputCountryFlag-borderWidth: 1px;
	--PhoneInputCountryFlag-borderColor: rgba(0, 0, 0, 0.5);
	--PhoneInputCountrySelect-marginRight: 0.5em;
	--PhoneInputCountrySelectArrow-marginLeft: 0.3em;
	--PhoneInputCountrySelectArrow-marginTop: 0.2em;
	--PhoneInputCountrySelectArrow-width: 0.4em;
	--PhoneInputCountrySelectArrow-height: 0.35em;
	--PhoneInputCountrySelectArrow-color: #cdd1d6;
	--PhoneInputCountrySelectArrow-color--focus: #03b2cb;
}

.PhoneInput {
	/* This is done to stretch the contents of this component. */
	display: flex;
	align-items: center;
}

.PhoneInputInput {
	/* The phone number input stretches to fill all empty space */
	flex: 1;
	/* The phone number input should shrink
	   to make room for the extension input */
	min-width: 0;
}

.PhoneInputCountryIcon {
	/* The flag icon size is 4x3 hence the exact `width` and `height` values */
	width: var(--PhoneInputCountryFlag-width);
	height: var(--PhoneInputCountryFlag-height);
	/* `1px` is still too much for a "retina" screen but there's
	   no way in CSS to specify "hairline" border width. */
	border: var(--PhoneInputCountryFlag-borderWidth) solid var(--PhoneInputCountryFlag-borderColor);
	/* Makes sure `width`x`height` is exactly `4x3` and
	   `border` width is not included in it */
	box-sizing: content-box;
}

.PhoneInputCountryIcon--square {
	/* The international icon size is square */
	/* and also has no border hence the `2 * 1px` `width` and `height` compensation */
	width: calc(var(--PhoneInputCountryFlag-height) + 2 * var(--PhoneInputCountryFlag-borderWidth));
	height: calc(var(--PhoneInputCountryFlag-height) + 2 * var(--PhoneInputCountryFlag-borderWidth));
	/* The international icon size is square, hence the exact `padding` value */
	/* for precise alignment with `4x3` sized country flags. */
	padding-left: calc((var(--PhoneInputCountryFlag-width) - var(--PhoneInputCountryFlag-height)) / 2);
	padding-right: calc((var(--PhoneInputCountryFlag-width) - var(--PhoneInputCountryFlag-height)) / 2);
	border: none;
}

.PhoneInputCountryIconImg {
	max-width: 100%;
	max-height: 100%;
}

/* Styling native country `<select/>`. */

.PhoneInputCountry {
	position: relative;
	align-self: stretch;
	display: flex;
	align-items: center;
	margin-right: var(--PhoneInputCountrySelect-marginRight);
}

.PhoneInputCountrySelect {
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
	z-index: 1;
	border: 0;
	opacity: 0;
	cursor: pointer;
}

.PhoneInputCountrySelectArrow {
	display: block;
	content: '';
	width: 0;
	height: 0;
	margin-top: var(--PhoneInputCountrySelectArrow-marginTop);
	margin-left: var(--PhoneInputCountrySelectArrow-marginLeft);
	border-top-width: var(--PhoneInputCountrySelectArrow-height);
	border-bottom-width: 0;
	border-left-width: calc(var(--PhoneInputCountrySelectArrow-width) / 2);
	border-right-width: calc(var(--PhoneInputCountrySelectArrow-width) / 2);
	border-style: solid;
	border-left-color: transparent;
	border-right-color: transparent;
	color: var(--PhoneInputCountrySelectArrow-color);
}

/* A "divider" `<option/>` for a native `<select/>`. */
.PhoneInputCountrySelectDivider {
	font-size: 1px;
	background: black;
}

.PhoneInputCountrySelect:focus + .PhoneInputCountrySelectArrow {
	color: var(--PhoneInputCountrySelectArrow-color--focus);
}